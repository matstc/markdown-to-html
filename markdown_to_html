#!/usr/bin/env ruby
require 'tempfile'
## -- coding: utf-8 -- 

content = File.open(ARGV[0]){|f| f.read}

def construct_path string
  File.expand_path(string, File.realpath(__FILE__))
end

# Add a title block using the filename
title = File.basename(ARGV[0], File.extname(ARGV[0])).split(/-|_/).map{|s| s[0].upcase + s[1,s.size];}.join(" ")
if title.include? ":"
  title.sub!(/^/,"<span class='first-name'>")
  title.sub!(":","</span><span class='subtitle'>")
  title.sub!(/$/,"</span>")
end

temp_file = Tempfile.new('markdown_to_html', encoding: 'utf-8')
temp_file.write("% #{title}\n")

temp_file.write("\n<div id='main-column'>\n")

ubuntu_font = construct_path('../ubuntu.woff')
temp_file.write("<link href='#{ubuntu_font}' rel='stylesheet' type='text/css'>")

jquery = construct_path('../jquery-1.10.1.min.js')
temp_file.write("<script src='#{jquery}'></script>")

sorttable = construct_path('../sorttable.js')
temp_file.write("<script src='#{sorttable}'></script>")

js =<<EOS
<script language="javascript">
var setupAsides = function(){

  $('aside').each(function() {
    $(this).hover(
      function() { $(this).stop().animate({ opacity: 1.0 }, 300); $(this).css("z-index", 10);},
      function() { $(this).stop().animate({ opacity: 0.4 }, 800); $(this).css("z-index", 1);})
  });

  var reposition = function(){
    var content = $("#main-content");
    $("aside").css("left", content.offset().left + content.width() + 35);
  };
  $(window).resize(reposition);

  $("aside").each(function (idx, elem){
      var elem = $(elem);
      elem.css("z-index", 1);
      elem.css("top", elem.offset().top - 20);
      elem.css("position", "absolute");
      elem.detach().appendTo("body");
  });

  reposition();

  $("table").each(function(_, table){
    sorttable.makeSortable(table);
  });

  var tableHeaders = $("th")
  tableHeaders.css('cursor', 'pointer');
  tableHeaders.hover(function(){$(this).css('text-decoration','underline');},
                     function(){$(this).css('text-decoration','none')});
}

$(document).ready(setTimeout("setupAsides()", 200)); // strange code to make sure images are loaded and occupying their space so calculations will be correct
</script>
EOS
temp_file.write(js)

temp_file.write("\n<div id='main-content'>\n")
temp_file.write(content)
temp_file.write("\n</div>\n")

temp_file.write("\n</div>\n")
temp_file.write("<footer>#{Time.now.strftime("Published %B %e, %Y @ %H:%M %Z")}</footer>")

temp_file.close

css = construct_path('../themes/default.css')

puts `pandoc -f markdown -t html --self-contained --css "#{css}" "#{temp_file.path}"`
